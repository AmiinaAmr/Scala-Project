[0m[[0m[0mdebug[0m] [0m[0m> Exec(;Test/compile; collectAnalyses, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Processing event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Done event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(Test/compile, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Processing event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Test / compile[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskStart, {"taskId":{"id":"5","parents":[]},"eventTime":1646644755778,"message":"Compiling graph_squelette","dataKind":"compile-task","data":{"target":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"}}})[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 11 Scala sources to C:\Users\CYTech Student\OneDrive\Documents\GitHub\graph_squelette\target\scala-2.13\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":3,"message":"compiling 11 Scala sources to C:\\Users\\CYTech Student\\OneDrive\\Documents\\GitHub\\graph_squelette\\target\\scala-2.13\\classes ..."})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"5","parents":[]},"eventTime":1646644755960,"message":"Compiling graph_squelette (0%)","total":286,"progress":0,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"5","parents":[]},"eventTime":1646644755963,"message":"Compiling graph_squelette (0%)","total":286,"progress":0,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"5","parents":[]},"eventTime":1646644756011,"message":"Compiling graph_squelette (5%)","total":286,"progress":5,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"5","parents":[]},"eventTime":1646644756013,"message":"Compiling graph_squelette (5%)","total":286,"progress":5,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"5","parents":[]},"eventTime":1646644756015,"message":"Compiling graph_squelette (5%)","total":286,"progress":5,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"5","parents":[]},"eventTime":1646644756025,"message":"Compiling graph_squelette (10%)","total":286,"progress":10,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"5","parents":[]},"eventTime":1646644756026,"message":"Compiling graph_squelette (10%)","total":286,"progress":10,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"5","parents":[]},"eventTime":1646644756027,"message":"Compiling graph_squelette (10%)","total":286,"progress":10,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/publishDiagnostics, {"textDocument":{"uri":"file:///C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/main.scala"},"buildTarget":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"},"diagnostics":[{"range":{"start":{"line":5,"character":16},"end":{"line":5,"character":38}},"severity":1,"source":"sbt","message":"not found: type SimpleGraphDefaultImpl"}],"reset":false})[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\CYTech Student\OneDrive\Documents\GitHub\graph_squelette\main.scala:6:17: not found: type SimpleGraphDefaultImpl[0m
[0m[[0m[31merror[0m] [0m[0m     val sG=new SimpleGraphDefaultImpl(vertices,edges);[0m
[0m[[0m[31merror[0m] [0m[0m                ^[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":1,"message":"C:\\Users\\CYTech Student\\OneDrive\\Documents\\GitHub\\graph_squelette\\main.scala:6:17: not found: type SimpleGraphDefaultImpl"})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":1,"message":"     val sG=new SimpleGraphDefaultImpl(vertices,edges);"})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":1,"message":"                ^"})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/publishDiagnostics, {"textDocument":{"uri":"file:///C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/main.scala"},"buildTarget":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"},"diagnostics":[{"range":{"start":{"line":5,"character":39},"end":{"line":5,"character":47}},"severity":1,"source":"sbt","message":"not found: value vertices"}],"reset":false})[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\CYTech Student\OneDrive\Documents\GitHub\graph_squelette\main.scala:6:40: not found: value vertices[0m
[0m[[0m[31merror[0m] [0m[0m     val sG=new SimpleGraphDefaultImpl(vertices,edges);[0m
[0m[[0m[31merror[0m] [0m[0m                                       ^[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":1,"message":"C:\\Users\\CYTech Student\\OneDrive\\Documents\\GitHub\\graph_squelette\\main.scala:6:40: not found: value vertices"})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":1,"message":"     val sG=new SimpleGraphDefaultImpl(vertices,edges);"})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":1,"message":"                                       ^"})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/publishDiagnostics, {"textDocument":{"uri":"file:///C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/main.scala"},"buildTarget":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"},"diagnostics":[{"range":{"start":{"line":5,"character":48},"end":{"line":5,"character":53}},"severity":1,"source":"sbt","message":"not found: value edges"}],"reset":false})[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\CYTech Student\OneDrive\Documents\GitHub\graph_squelette\main.scala:6:49: not found: value edges[0m
[0m[[0m[31merror[0m] [0m[0m     val sG=new SimpleGraphDefaultImpl(vertices,edges);[0m
[0m[[0m[31merror[0m] [0m[0m                                                ^[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":1,"message":"C:\\Users\\CYTech Student\\OneDrive\\Documents\\GitHub\\graph_squelette\\main.scala:6:49: not found: value edges"})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":1,"message":"     val sG=new SimpleGraphDefaultImpl(vertices,edges);"})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":1,"message":"                                                ^"})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/publishDiagnostics, {"textDocument":{"uri":"file:///C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/src/main/scala/undirected/Edge.scala"},"buildTarget":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"},"diagnostics":[{"range":{"start":{"line":26,"character":20},"end":{"line":26,"character":27}},"severity":2,"source":"sbt","message":"abstract type V in type pattern undirected.Edge[V] is unchecked since it is eliminated by erasure"}],"reset":false})[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\CYTech Student\OneDrive\Documents\GitHub\graph_squelette\src\main\scala\undirected\Edge.scala:27:21: abstract type V in type pattern undirected.Edge[V] is unchecked since it is eliminated by erasure[0m
[0m[[0m[33mwarn[0m] [0m[0m        case that : Edge[V] => that._1 == _1 && that._2 == _2 || that._1 == _2 && that._2 == _1[0m
[0m[[0m[33mwarn[0m] [0m[0m                    ^[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":2,"message":"C:\\Users\\CYTech Student\\OneDrive\\Documents\\GitHub\\graph_squelette\\src\\main\\scala\\undirected\\Edge.scala:27:21: abstract type V in type pattern undirected.Edge[V] is unchecked since it is eliminated by erasure"})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":2,"message":"        case that : Edge[V] => that._1 == _1 && that._2 == _2 || that._1 == _2 && that._2 == _1"})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":2,"message":"                    ^"})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"5","parents":[]},"eventTime":1646644756455,"message":"Compiling graph_squelette (15%)","total":286,"progress":15,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"5","parents":[]},"eventTime":1646644756477,"message":"Compiling graph_squelette (15%)","total":286,"progress":15,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"}}})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskProgress, {"taskId":{"id":"5","parents":[]},"eventTime":1646644756478,"message":"Compiling graph_squelette (15%)","total":286,"progress":15,"dataKind":"compile-progress","data":{"target":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"}}})[0m
[0m[[0m[33mwarn[0m] [0m[0mone warning found[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":2,"message":"one warning found"})[0m
[0m[[0m[31merror[0m] [0m[0mthree errors found[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":1,"message":"three errors found"})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/publishDiagnostics, {"textDocument":{"uri":"file:///C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/main.scala"},"buildTarget":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"},"diagnostics":[{"range":{"start":{"line":5,"character":16},"end":{"line":5,"character":38}},"severity":1,"source":"sbt","message":"not found: type SimpleGraphDefaultImpl"},{"range":{"start":{"line":5,"character":39},"end":{"line":5,"character":47}},"severity":1,"source":"sbt","message":"not found: value vertices"},{"range":{"start":{"line":5,"character":48},"end":{"line":5,"character":53}},"severity":1,"source":"sbt","message":"not found: value edges"}],"reset":true})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/publishDiagnostics, {"textDocument":{"uri":"file:///C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/src/main/scala/directed/Arc.scala"},"buildTarget":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"},"diagnostics":[],"reset":true})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/publishDiagnostics, {"textDocument":{"uri":"file:///C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/src/main/scala/directed/StrictGraph.scala"},"buildTarget":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"},"diagnostics":[],"reset":true})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/publishDiagnostics, {"textDocument":{"uri":"file:///C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/src/main/scala/directed/StrictGraphDefaultImpl.scala"},"buildTarget":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"},"diagnostics":[],"reset":true})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/publishDiagnostics, {"textDocument":{"uri":"file:///C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/src/main/scala/directed/StrictGraphMatrixImpl.scala"},"buildTarget":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"},"diagnostics":[],"reset":true})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/publishDiagnostics, {"textDocument":{"uri":"file:///C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/src/main/scala/directed/StrictGraphSuccessorsImpl.scala"},"buildTarget":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"},"diagnostics":[],"reset":true})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/publishDiagnostics, {"textDocument":{"uri":"file:///C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/src/main/scala/undirected/Edge.scala"},"buildTarget":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"},"diagnostics":[{"range":{"start":{"line":26,"character":20},"end":{"line":26,"character":27}},"severity":2,"source":"sbt","message":"abstract type V in type pattern undirected.Edge[V] is unchecked since it is eliminated by erasure"}],"reset":true})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/publishDiagnostics, {"textDocument":{"uri":"file:///C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/src/main/scala/undirected/SimpleGraph.scala"},"buildTarget":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"},"diagnostics":[],"reset":true})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/publishDiagnostics, {"textDocument":{"uri":"file:///C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/src/main/scala/undirected/SimpleGraphDefaultImpl.scala"},"buildTarget":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"},"diagnostics":[],"reset":true})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/publishDiagnostics, {"textDocument":{"uri":"file:///C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/src/main/scala/undirected/SimpleGraphMatrixImpl.scala"},"buildTarget":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"},"diagnostics":[],"reset":true})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/publishDiagnostics, {"textDocument":{"uri":"file:///C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/src/main/scala/undirected/SimpleGraphNeighborsImpl.scala"},"buildTarget":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"},"diagnostics":[],"reset":true})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/taskFinish, {"taskId":{"id":"5","parents":[]},"eventTime":1646644756488,"message":"Compiled graph_squelette","status":2,"dataKind":"compile-report","data":{"target":{"uri":"file:/C:/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/#graph_squelette/Compile"},"errors":3,"warnings":1,"time":710}})[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched json error for requestId None: {"code":-32603,"message":"(Compile / \u001b[31mcompileIncremental\u001b[0m) Compilation failed"}[0m
[0m[[0m[31merror[0m] [0m[0m(Compile / [31mcompileIncremental[0m) Compilation failed[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":1,"message":"(Compile / \u001b[31mcompileIncremental\u001b[0m) Compilation failed"})[0m
[0m[[0m[31merror[0m] [0m[0mTotal time: 1 s, completed Mar 7, 2022 10:19:16 AM[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Done event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didClose: JsonRpcNotificationMessage(2.0, textDocument/didClose, {"textDocument":{"uri":"file:///c%3A/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/src/main/scala/undirected/SimpleGraphDefaultImpl.scala"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didClose: JsonRpcNotificationMessage(2.0, textDocument/didClose, {"textDocument":{"uri":"file:///c%3A/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/main.scala"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/src/test/scala/directed/StrictGraphSpec.scala","languageId":"scala","version":1,"text":"package directed\n\nimport org.scalatest.flatspec.AnyFlatSpec\nimport org.scalatest.matchers.must.Matchers\nimport org.scalatestplus.scalacheck.ScalaCheckPropertyChecks.forAll\nimport org.scalacheck.Gen._\nimport org.scalacheck.Gen\n\n/** General template for test of [[StrictGraph]] implementations\n  * @param companion the companion object of test class (see [[StrictGraphSpecCompanion]] documentation)\n  */\nabstract class StrictGraphSpec[V](companion : StrictGraphSpecCompanion[V]) extends AnyFlatSpec with Matchers {\n    import companion._\n\n    /* QUERY METHODS */\n\n    behavior of s\"$name.successorsOf\"\n      it must \"yield None if input is not an actual vertex of graph\" in\n        forAll(graphAndNoActualVertex) { case (g, v) => (g successorsOf v) mustBe None }\n      it must \"yield a subset of vertex set if input is an actual vertex of graph\" in\n        forAll(graphAndActualVertex)   { case (g, v) => (g successorsOf v) map { _ subsetOf g.vertices } must equal (Some(true)) }\n      it must \"yield a set of adjacent vertices\" in\n        forAll(graphAndActualVertex)   { case (g, v) => (g successorsOf v).get forall { g.arcs contains Arc(v, _) }}\n\n    /* VERTEX OPERATIONS */\n\n    behavior of s\"$name.+\"\n      it must \"contain input vertex\" in\n        forAll(zip(graph, vertex))     { case (g, v) => (g + v).vertices must equal (g.vertices + v) }\n      it must \"return input graph if input vertex is already in graph\" in\n        forAll(graphAndActualVertex)   { case (g, v) =>  g + v           must equal   (g) }\n      it must \"have input vertex with degree 0 if not an actual vertex of graph\" in\n        forAll(graphAndNoActualVertex) { case (g, v) => (g + v) degreeOf v mustBe Some(0) }\n\n      behavior of s\"$name.-\"\n      it must \"NOT contain input vertex\" in\n        forAll(zip(graph, vertex))     { case (g, v) => (g - v).vertices must equal (g.vertices - v) }\n      it must \"return input graph if input vertex is not already in graph\" in\n        forAll(graphAndNoActualVertex) { case (g, v) =>  g - v      must equal (g) }\n      it must \"have input vertex removed from successors if an actual vertex of graph\" in\n        forAll(graphAndActualVertex)   { case (g, v) => (g successorsOf v).get forall { n => !((g - v).successorsOf(n).get contains v) } }\n      it must \"have degree updated for all successors if an actual vertex of graph\" in\n        forAll(graphAndActualVertex)   { case (g, v) => (g successorsOf v).get forall { n => (g - v).degreeOf(n) contains (g.degreeOf(n).get - 1) }}\n      it must \"revert back the + operator applied on an actual new vertex\" in\n        forAll(graphAndNoActualVertex) { case (g, v) => (g + v) - v must equal (g) }\n\n    /* ARC OPERATIONS */\n\n    behavior of s\"$name.+|\"\n      it must \"contain input arc\" in\n        forAll(zip(graph, arc))   { case (g, a) => (g +| a).arcs must equal (g.arcs + a) }\n      it must \"contain ends of input arc\" in\n        forAll(zip(graph, arc))   { case (g, a) => Set(a._1, a._2) subsetOf (g +| a).vertices mustBe true }\n      it must \"return input graph if input arc is already in graph\" in\n        forAll(graphAndActualArc) { case (g, a) =>  g +| a       must equal   (g) }\n\n    behavior of s\"$name.-|\"\n      it must \"NOT contain input arc\" in\n        forAll(zip(graph, arc))     { case (g, a) => (g -| a).arcs must equal (g.arcs - a) }\n      it must \"return input graph if input arc is not already in graph\" in\n        forAll(graphAndNoActualArc) { case (g, a) =>  g -| a       must equal (g) }\n      it must \"have ends removed from successors if an actual vertex of graph\" in\n        forAll(graphAndActualArc)   { case (g, a) => (g -| a).successorsOf(a._1) must not contain a._2 }\n      it must \"have degree updated for both ends if an actual vertex of graph\" in\n        forAll(graphAndActualArc)   { case (g, a) => (g degreeOf a._1 map { _ - 1}, g degreeOf a._2 map { _ - 1}) must equal ((g -| a) degreeOf a._1, (g -| a) degreeOf a._2) }\n\n    behavior of s\"$name.withoutArc\"\n      it must \"let vertex set unchanged\" in\n        forAll(graph) { g =>  g.withoutArc.vertices must equal (g.vertices) }\n      it must \"have empty arc set\" in\n        forAll(graph) { g =>  g.withoutArc.arcs mustBe empty }\n      it must \"have empty successors for any vertex\" in\n        forAll(graph) { g => (g.withoutArc.vertices forall { v => (g.withoutArc successorsOf v) == Some(Set.empty[V]) }) mustBe true }\n      it must \"have zero degree for any vertex\" in\n        forAll(graph) { g => (g.withoutArc.vertices forall { v => (g.withoutArc degreeOf v) == Some(0) }) mustBe true }\n  }\n\n/** General template for [[StrictGraphSpec]] companion objects\n  * @param name name of actual implementation\n  * @tparam V type of vertex used for test\n  */\nabstract class StrictGraphSpecCompanion[V](val name : String) {\n    /* BASIC GENERATORS */\n\n    /** The vertex generator */\n    val vertex : Gen[V]\n\n    /** The arc generator\n      * @param vertices set of vertices to pick from\n      *                 (if empty, generator [[vertex]] is used)\n      */\n    def arcFrom(vertices : Set[V]) : Gen[Arc[V]] = {\n        val vertexGenerator = if (vertices.isEmpty) vertex else Gen.oneOf(vertices)\n        for (v1 <- vertexGenerator ; v2 <- vertexGenerator if v1 != v2) yield Arc(v1, v2)\n      }\n\n    /** The arc generator */\n    lazy val arc : Gen[Arc[V]] = arcFrom(Set.empty[V])\n\n    /** The undirected simple graph generator\n      *\n      * If `g` is generated value, then it must be ensured that `g.vertices` is NOT empty.\n      */\n    val graph : Gen[StrictGraph[V]] = graphWithAtLeast(1)\n\n    /** The general directed simple graph generator\n      *\n      * If `g` is generated value, then it must be ensured that `g.vertices` have at least `vertexMinCount` elements\n      *                                                     and `g.arcs`    have at least   `arcMinCount` elements\n      * @param vertexMinCount minimal number of vertices to use\n      * @param arcMinCount   minimal number of arcs to use\n      */\n    def graphWithAtLeast(vertexMinCount : Int, arcMinCount : Int = 0) : Gen[StrictGraph[V]]\n\n    /** A positive-valued valuation generator\n      * @param arcs set of whose values must be defined\n      */\n    def positiveValuation(arcs : Set[Arc[V]]) : Gen[Map[Arc[V], Double]] =\n      for (values <- Gen.containerOfN[Seq, Double](arcs.size, posNum[Double])) yield (arcs.toSeq zip (values map {_ + 1})).to(Map)\n\n    /* ADVANCED GENERATORS */\n\n    /** A generator for a graph and a vertex of the graph\n      *\n      * If `(g, v)` is a generated value, then it must be ensured that `g.vertices` contains `v`.\n      */\n    lazy val graphAndActualVertex : Gen[(StrictGraph[V], V)] =\n      for (g <- graph ; v <- Gen.oneOf(g.vertices)) yield (g, v)\n\n    /** A generator for a graph and a vertex NOT in the graph\n      *\n      * If `(g, v)` is a generated value, then it must be ensured that `g.vertices` does not contain `v`.\n      */\n    lazy val graphAndNoActualVertex : Gen[(StrictGraph[V], V)] =\n      zip(graph, vertex) suchThat { case (g, v) => !(g.vertices contains v) }\n\n  /** A generator for a graph and an arc of the graph\n      *\n      * If `(g, a)` is a generated value, then it must be ensured that `g.arcs`    contains `a`.\n      */\n    lazy val graphAndActualArc : Gen[(StrictGraph[V], Arc[V])] =\n      for (g <- graphWithAtLeast(2, 1) ; a <- Gen.oneOf(g.arcs)) yield (g, a)\n\n    /** A generator for a graph and an arc NOT in the graph\n      *\n      * If `(g, a)` is a generated value, then it must be ensured that `g.arcs` does not contain `a`.\n      */\n    lazy val graphAndNoActualArc : Gen[(StrictGraph[V], Arc[V])] =\n      for (g <- graph ; a <- arcFrom(g.vertices) if !(g.arcs contains a)) yield (g, a)\n\n    /** A generator for a graph and a positive valuation */\n    lazy val graphAndValuation : Gen[(StrictGraph[V], Map[Arc[V], Double])] =\n      for (g <- graphWithAtLeast(2, 1) ; v <- positiveValuation(g.arcs)) yield (g, v)\n  }\n"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/CYTech%20Student/OneDrive/Documents/GitHub/graph_squelette/main.scala","languageId":"scala","version":46,"text":"\r\n\r\nobject main extends App {\r\n\r\n    println(\"Hello World !\");\r\n     val sG=new SimpleGraphDefaultImpl(vertices,edges);\r\n\r\n\r\n}\r\n"}})[0m
